{"ast":null,"code":"import _objectSpread from \"/Users/mrluciferous/Desktop/Projects/practice-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport SearchActionTypes from './search-types';\nconst INITIAL_STATE = {\n  isFetching: false,\n  searchData: [],\n  errorMessage: undefined\n};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SearchActionTypes.FETCH_SEARCH_DATA_START:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        searchData: action.payload\n      });\n\n    case SearchActionTypes.FETCH_SEARCH_DATA_ERROR:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;","map":{"version":3,"sources":["/Users/mrluciferous/Desktop/Projects/practice-project/src/Redux/Search/search-reducer.js"],"names":["SearchActionTypes","INITIAL_STATE","isFetching","searchData","errorMessage","undefined","searchReducer","state","action","type","FETCH_SEARCH_DATA_START","FETCH_SEARCH_DATA_SUCCESS","payload","FETCH_SEARCH_DATA_ERROR"],"mappings":";AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,YAAY,EAAEC;AAHI,CAAtB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,iBAAiB,CAACU,uBAAvB;AACI,+BACOH,KADP;AAEIL,QAAAA,UAAU,EAAE;AAFhB;;AAIJ,SAAKF,iBAAiB,CAACW,yBAAvB;AACI,+BACOJ,KADP;AAEIL,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,UAAU,EAAEK,MAAM,CAACI;AAHvB;;AAKJ,SAAKZ,iBAAiB,CAACa,uBAAvB;AACI,+BACON,KADP;AAEIL,QAAAA,UAAU,EAAE,KAFhB;AAGIE,QAAAA,YAAY,EAAEI,MAAM,CAACI;AAHzB;;AAKJ;AACI,aAAOL,KAAP;AAnBR;AAqBD,CAtBD;;AAwBA,eAAeD,aAAf","sourcesContent":["import SearchActionTypes from './search-types';\n\nconst INITIAL_STATE = {\n    isFetching: false,\n    searchData: [],\n    errorMessage: undefined\n}\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n      case SearchActionTypes.FETCH_SEARCH_DATA_START:\n          return {\n              ...state,\n              isFetching: true\n          }\n      case SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS:\n          return {\n              ...state,\n              isFetching: false,\n              searchData: action.payload\n          }\n      case SearchActionTypes.FETCH_SEARCH_DATA_ERROR:\n          return {\n              ...state,\n              isFetching: false,\n              errorMessage: action.payload\n          }\n      default: \n          return state\n  }\n}\n\nexport default searchReducer;"]},"metadata":{},"sourceType":"module"}