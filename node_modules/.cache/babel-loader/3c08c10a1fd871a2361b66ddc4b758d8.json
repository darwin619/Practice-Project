{"ast":null,"code":"import SearchActionTypes from \"./search-types\";\nimport { fetchSearchData, fetchImageData } from \"../../Service/SearchService\";\nexport const fetchSearchDataStart = () => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_START\n});\nexport const fetchSearchDataSuccess = data => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchSearchDataError = error => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_ERROR,\n  payload: error\n});\nexport const setSearchValue = value => ({\n  type: SearchActionTypes.SET_SEARCH_VALUE,\n  payload: value\n});\nexport const fetchSearchDataAsync = value => {\n  return dispatch => {\n    dispatch(fetchSearchDataStart());\n    fetchSearchData(value).then(data => {\n      const newData = data.collection.items.map(({\n        data,\n        links\n      }) => ({\n        data,\n        links\n      }));\n      dispatch(fetchSearchDataSuccess(newData));\n    }).catch(error => dispatch(fetchSearchDataError(error.message)));\n  };\n};\nexport const fetchImageDataAsync = id => {\n  return dispatch => {\n    fetchImageData(id).then(data => console.log(data));\n  };\n};","map":{"version":3,"sources":["/Users/mrluciferous/Desktop/Projects/practice-project/src/Redux/Search/search-actions.js"],"names":["SearchActionTypes","fetchSearchData","fetchImageData","fetchSearchDataStart","type","FETCH_SEARCH_DATA_START","fetchSearchDataSuccess","data","FETCH_SEARCH_DATA_SUCCESS","payload","fetchSearchDataError","error","FETCH_SEARCH_DATA_ERROR","setSearchValue","value","SET_SEARCH_VALUE","fetchSearchDataAsync","dispatch","then","newData","collection","items","map","links","catch","message","fetchImageDataAsync","id","console","log"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AACA,SAAQC,eAAR,EAAyBC,cAAzB,QAA8C,6BAA9C;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,iBAAiB,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,IAAI,KAAK;AAC7CH,EAAAA,IAAI,EAAEJ,iBAAiB,CAACQ,yBADqB;AAE7CC,EAAAA,OAAO,EAAEF;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAMG,oBAAoB,GAAGC,KAAK,KAAK;AAC5CP,EAAAA,IAAI,EAAEJ,iBAAiB,CAACY,uBADoB;AAE5CH,EAAAA,OAAO,EAAEE;AAFmC,CAAL,CAAlC;AAKP,OAAO,MAAME,cAAc,GAAGC,KAAK,KAAK;AACtCV,EAAAA,IAAI,EAAEJ,iBAAiB,CAACe,gBADc;AAEtCN,EAAAA,OAAO,EAAEK;AAF6B,CAAL,CAA5B;AAKP,OAAO,MAAME,oBAAoB,GAAGF,KAAK,IAAI;AAC3C,SAAOG,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACd,oBAAoB,EAArB,CAAR;AAEAF,IAAAA,eAAe,CAACa,KAAD,CAAf,CACGI,IADH,CACQX,IAAI,IAAI;AACV,YAAMY,OAAO,GAAGZ,IAAI,CAACa,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,CAAC;AAACf,QAAAA,IAAD;AAAOgB,QAAAA;AAAP,OAAD,MAAoB;AAAChB,QAAAA,IAAD;AAAOgB,QAAAA;AAAP,OAApB,CAA1B,CAAhB;AACEN,MAAAA,QAAQ,CAACX,sBAAsB,CAACa,OAAD,CAAvB,CAAR;AACL,KAJH,EAKGK,KALH,CAKSb,KAAK,IAAIM,QAAQ,CAACP,oBAAoB,CAACC,KAAK,CAACc,OAAP,CAArB,CAL1B;AAMD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,mBAAmB,GAAGC,EAAE,IAAI;AACvC,SAAOV,QAAQ,IAAI;AACjBf,IAAAA,cAAc,CAACyB,EAAD,CAAd,CACCT,IADD,CACMX,IAAI,IAAIqB,OAAO,CAACC,GAAR,CAAYtB,IAAZ,CADd;AAED,GAHD;AAID,CALM","sourcesContent":["import SearchActionTypes from \"./search-types\";\nimport {fetchSearchData, fetchImageData} from \"../../Service/SearchService\";\n\nexport const fetchSearchDataStart = () => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_START\n});\n\nexport const fetchSearchDataSuccess = data => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS,\n  payload: data\n});\n\nexport const fetchSearchDataError = error => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_ERROR,\n  payload: error\n});\n\nexport const setSearchValue = value => ({\n  type: SearchActionTypes.SET_SEARCH_VALUE,\n  payload: value\n});\n\nexport const fetchSearchDataAsync = value => {\n  return dispatch => {\n    dispatch(fetchSearchDataStart());\n\n    fetchSearchData(value)\n      .then(data => {\n          const newData = data.collection.items.map(({data, links}) => ({data, links}) )\n            dispatch(fetchSearchDataSuccess(newData));\n      })\n      .catch(error => dispatch(fetchSearchDataError(error.message)));\n  };\n};\n\nexport const fetchImageDataAsync = id => {\n  return dispatch => {\n    fetchImageData(id)\n    .then(data => console.log(data))\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}