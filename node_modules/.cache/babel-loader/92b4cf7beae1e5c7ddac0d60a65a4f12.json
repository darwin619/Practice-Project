{"ast":null,"code":"import SearchActionTypes from \"./search-types\";\nimport fetchSearchData from \"../../Service/SearchService\";\nexport const fetchSearchDataStart = () => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_START\n});\nexport const fetchSearchDataSuccess = data => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchSearchDataError = error => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_ERROR,\n  payload: error\n});\n\nconst fetchSearchDataAsync = value => {\n  return dispatch => {\n    dispatch(fetchSearchDataStart());\n    fetchSearchData(value).then(data => {\n      const newData = data.collection.items.map(({\n        data,\n        links\n      }) => ({\n        data,\n        links\n      }));\n      console.log(value);\n      dispatch(fetchSearchDataSuccess(newData));\n    }).catch(error => dispatch(fetchSearchDataError(error.message)));\n  };\n};\n\nexport default fetchSearchDataAsync;","map":{"version":3,"sources":["/Users/mrluciferous/Desktop/Projects/practice-project/src/Redux/Search/search-actions.js"],"names":["SearchActionTypes","fetchSearchData","fetchSearchDataStart","type","FETCH_SEARCH_DATA_START","fetchSearchDataSuccess","data","FETCH_SEARCH_DATA_SUCCESS","payload","fetchSearchDataError","error","FETCH_SEARCH_DATA_ERROR","fetchSearchDataAsync","value","dispatch","then","newData","collection","items","map","links","console","log","catch","message"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gBAA9B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEH,iBAAiB,CAACI;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,IAAI,KAAK;AAC7CH,EAAAA,IAAI,EAAEH,iBAAiB,CAACO,yBADqB;AAE7CC,EAAAA,OAAO,EAAEF;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAMG,oBAAoB,GAAGC,KAAK,KAAK;AAC5CP,EAAAA,IAAI,EAAEH,iBAAiB,CAACW,uBADoB;AAE5CH,EAAAA,OAAO,EAAEE;AAFmC,CAAL,CAAlC;;AAKP,MAAME,oBAAoB,GAAGC,KAAK,IAAI;AACpC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAD,IAAAA,eAAe,CAACY,KAAD,CAAf,CACGE,IADH,CACQT,IAAI,IAAI;AACV,YAAMU,OAAO,GAAGV,IAAI,CAACW,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0B,CAAC;AAACb,QAAAA,IAAD;AAAOc,QAAAA;AAAP,OAAD,MAAoB;AAACd,QAAAA,IAAD;AAAOc,QAAAA;AAAP,OAApB,CAA1B,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACEC,MAAAA,QAAQ,CAACT,sBAAsB,CAACW,OAAD,CAAvB,CAAR;AACL,KALH,EAMGO,KANH,CAMSb,KAAK,IAAII,QAAQ,CAACL,oBAAoB,CAACC,KAAK,CAACc,OAAP,CAArB,CAN1B;AAOD,GAVD;AAWD,CAZD;;AAcA,eAAeZ,oBAAf","sourcesContent":["import SearchActionTypes from \"./search-types\";\nimport fetchSearchData from \"../../Service/SearchService\";\n\nexport const fetchSearchDataStart = () => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_START\n});\n\nexport const fetchSearchDataSuccess = data => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_SUCCESS,\n  payload: data\n});\n\nexport const fetchSearchDataError = error => ({\n  type: SearchActionTypes.FETCH_SEARCH_DATA_ERROR,\n  payload: error\n});\n\nconst fetchSearchDataAsync = value => {\n  return dispatch => {\n    dispatch(fetchSearchDataStart());\n\n    fetchSearchData(value)\n      .then(data => {\n          const newData = data.collection.items.map(({data, links}) => ({data, links}) )\n          console.log(value)\n            dispatch(fetchSearchDataSuccess(newData));\n      })\n      .catch(error => dispatch(fetchSearchDataError(error.message)));\n  };\n};\n\nexport default fetchSearchDataAsync;\n"]},"metadata":{},"sourceType":"module"}