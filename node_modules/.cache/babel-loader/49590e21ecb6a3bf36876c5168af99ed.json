{"ast":null,"code":"import _objectSpread from \"/Users/mrluciferous/Desktop/Projects/practice-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport ApodActionTypes from \"./apod-actions\";\nconst INITIAL_STATE = {\n  isFetching: false,\n  apodData: null,\n  errorMessage: undefined\n};\n\nconst apodReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ApodActionTypes.SET_APOD_DATA_START:\n      {\n        return _objectSpread({}, state, {\n          isFetching: true\n        });\n      }\n\n    case ApodActionTypes.SET_APOD_DATA_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isFetching: false,\n          apodData: action.payload\n        });\n      }\n\n    case ApodActionTypes.SET_APOD_DATA_ERROR:\n      {\n        return _objectSpread({}, state, {\n          isFetching: false,\n          errorMessage: action.payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default apodReducer;","map":{"version":3,"sources":["/Users/mrluciferous/Desktop/Projects/practice-project/src/Redux/Apod/apod-reducer.js"],"names":["ApodActionTypes","INITIAL_STATE","isFetching","apodData","errorMessage","undefined","apodReducer","state","action","type","SET_APOD_DATA_START","SET_APOD_DATA_SUCCESS","payload","SET_APOD_DATA_ERROR"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,gBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,KADQ;AAEpBC,EAAAA,QAAQ,EAAE,IAFU;AAGpBC,EAAAA,YAAY,EAAEC;AAHM,CAAtB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,mBAArB;AAA0C;AACxC,iCAAYH,KAAZ;AAAmBL,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKF,eAAe,CAACW,qBAArB;AAA4C;AAC1C,iCAAYJ,KAAZ;AAAmBL,UAAAA,UAAU,EAAE,KAA/B;AAAsCC,UAAAA,QAAQ,EAAEK,MAAM,CAACI;AAAvD;AACD;;AACD,SAAKZ,eAAe,CAACa,mBAArB;AAA0C;AACxC,iCAAYN,KAAZ;AAAmBL,UAAAA,UAAU,EAAE,KAA/B;AAAsCE,UAAAA,YAAY,EAAEI,MAAM,CAACI;AAA3D;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import ApodActionTypes from \"./apod-actions\";\n\nconst INITIAL_STATE = {\n  isFetching: false,\n  apodData: null,\n  errorMessage: undefined\n};\n\nconst apodReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ApodActionTypes.SET_APOD_DATA_START: {\n      return { ...state, isFetching: true };\n    }\n    case ApodActionTypes.SET_APOD_DATA_SUCCESS: {\n      return { ...state, isFetching: false, apodData: action.payload };\n    }\n    case ApodActionTypes.SET_APOD_DATA_ERROR: {\n      return { ...state, isFetching: false, errorMessage: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default apodReducer;\n"]},"metadata":{},"sourceType":"module"}